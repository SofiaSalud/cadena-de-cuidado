CREATE OR REPLACE TABLE `sofia-data-305018.cadena_cuidado.services_events_diseases_and_emr_socios` AS 

SELECT 
	sed.member_id,
	sed.service_id,
	sed.case_event_id,
	sed.disease_case_id,
	sed.services_related_service_id,
	sed.services_health_plan_id,
	sed.caseevent_invoice_id,

  -- FROM services_services and related
	MAX_BY(sed.services_cpt, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_cpt,
	MAX_BY(sed.services_diagnosis_icd, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_diagnosis_icd,
	MAX_BY(sed.services_provided_by_object_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_provided_by_object_id,
	MAX_BY(sed.services_provided_by_content_type_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_provided_by_content_type_id,
	MAX_BY(sed.provider_network, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS provider_network,
	MAX_BY(sed.disease_origin_diagnosis_icd, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS disease_origin_diagnosis_icd,
	MAX_BY(sed.case_event_origin_diagnosis_icd, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS case_event_origin_diagnosis_icd,
	MAX_BY(sed.caseeventfinalletterdata_cie_codes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventfinalletterdata_cie_codes,
	MAX_BY(sed.caseeventfinalletterdata_cie_descriptions, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventfinalletterdata_cie_descriptions,
	MAX_BY(sed.caseeventfinalletterdata_cpt_codes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventfinalletterdata_cpt_codes,
	MAX_BY(sed.caseeventfinalletterdata_cpt_descriptions, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventfinalletterdata_cpt_descriptions,
	MAX_BY(sed.diseasecase_medical_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS diseasecase_medical_description,
	MAX_BY(sed.diseasecase_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS diseasecase_description,
	MAX_BY(sed.services_diagnosis_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_diagnosis_description,
	MAX_BY(sed.services_service_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_service_description,
	MAX_BY(sed.services_specification, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_specification,
	MAX_BY(sed.services_medical_recommendation_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_medical_recommendation_notes,
	MAX_BY(sed.caseevent_discharge_ruling_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_discharge_ruling_notes,
	MAX_BY(sed.caseevent_administrative_ruling_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_administrative_ruling_notes,
	MAX_BY(sed.caseevent_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_description,
	MAX_BY(sed.caseevent_medical_pre_dictamination_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_medical_pre_dictamination_notes,
	MAX_BY(sed.caseevent_internal_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_internal_notes,
	MAX_BY(sed.caseevent_requested_partner_doctor_info, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_requested_partner_doctor_info,
	MAX_BY(sed.caseevent_relevant_history, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_relevant_history,
	MAX_BY(sed.caseevent_discharge_reason, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_discharge_reason,
	MAX_BY(sed.caseevent_quote_and_scheduling_ruling_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_quote_and_scheduling_ruling_notes,
	MAX_BY(sed.caseevent_medical_procedure_ruling_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_medical_procedure_ruling_notes,
	MAX_BY(sed.services_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_created_ts,
	MAX_BY(sed.services_occurrence_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_occurrence_ts,
	MAX_BY(sed.servicecomment_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS servicecomment_created_ts,
	MAX_BY(sed.caseevent_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_created_ts,
	MAX_BY(sed.caseevent_occurrence_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_occurrence_ts,
	MAX_BY(sed.caseevent_pause_start_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_pause_start_ts,
	MAX_BY(sed.caseevent_discharge_start_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_discharge_start_ts,
	MAX_BY(sed.caseevent_medical_monitoring_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_medical_monitoring_ts,
	MAX_BY(sed.eventcomment_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS eventcomment_created_ts,
	MAX_BY(sed.caseeventsummary_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventsummary_created_ts,
	MAX_BY(sed.caseeventfinalletterdata_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventfinalletterdata_created_ts,
	MAX_BY(sed.diseasecase_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS diseasecase_created_ts,
	MAX_BY(sed.caseevent_state, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_state,
	MAX_BY(sed.caseevent_step, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_step,
	MAX_BY(sed.caseevent_medically_justified, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_medically_justified,
	MAX_BY(sed.caseevent_stage, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_stage,
	MAX_BY(sed.caseevent_member_stage, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_member_stage,
	MAX_BY(sed.caseevent_admission_source, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_admission_source,
	MAX_BY(sed.caseevent_category, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_category,
	MAX_BY(sed.caseevent_class, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseevent_class,
	MAX_BY(sed.services_comments, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_comments,
	MAX_BY(sed.servicecomment_comments, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS servicecomment_comments,
	MAX_BY(sed.eventcomment_comments, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS eventcomment_comments,
	MAX_BY(sed.servicecomment_author_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS servicecomment_author_id,
	MAX_BY(sed.eventcomment_author_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS eventcomment_author_id,
	MAX_BY(sed.caseeventsummary_author_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventsummary_author_id,
	MAX_BY(sed.caseeventsummary_category, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventsummary_category,
	MAX_BY(sed.caseeventsummary_assessment, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS caseeventsummary_assessment,
	MAX_BY(sed.services_is_automatic_approval_workflow, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_is_automatic_approval_workflow,
	MAX_BY(sed.services_automatic_ruling_passed, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_automatic_ruling_passed,
	MAX_BY(sed.services_process_state, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_process_state,
	MAX_BY(sed.services_evidence_state_flags, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_evidence_state_flags,
	MAX_BY(sed.services_service_type_value, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_service_type_value,
	MAX_BY(sed.service_type_from_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS service_type_from_description,
	MAX_BY(sed.services_scheduled, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_scheduled,
	MAX_BY(sed.services_assigned_to_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_assigned_to_id,
	MAX_BY(sed.services_coverage_tag, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS services_coverage_tag,
	MAX_BY(provider_admin_user_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS provider_admin_user_id,
	MAX_BY(doctorfriend_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctorfriend_id,
	MAX_BY(doctor_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_id,
	MAX_BY(doctor_user_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_user_id,
	MAX_BY(sed.provider_name, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS provider_name,
	MAX_BY(sed.provider_category_name, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS provider_category_name,
	MAX_BY(sed.provider_state, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS provider_state,
	MAX_BY(sed.provider_contract_category, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS provider_contract_category,
	MAX_BY(sed.doctorfriend_name, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctorfriend_name,
	MAX_BY(sed.doctor_nickname, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_nickname,
	MAX_BY(sed.doctor_name, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_name,
	MAX_BY(sed.doctor_descriptor, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_descriptor,
	MAX_BY(sed.doctor_is_primary_care_doctor, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_is_primary_care_doctor,
	MAX_BY(sed.doctor_is_active, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_is_active,
	MAX_BY(sed.doctor_is_pediatrics_care_doctor, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_is_pediatrics_care_doctor,
	MAX_BY(sed.doctor_license_institution, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_license_institution,
	MAX_BY(sed.doctor_internal_notes, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_internal_notes,
	MAX_BY(sed.doctor_availability_hours, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_availability_hours,
	MAX_BY(sed.doctor_specializations, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_specializations,
	MAX_BY(sed.doctor_specializationfare_name, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_specializationfare_name,
	MAX_BY(sed.doctor_specialization_name, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_specialization_name,
	MAX_BY(sed.doctor_specialization_description, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_specialization_description,
	MAX_BY(sed.doctor_specialization_type, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS doctor_specialization_type,
	MAX_BY(sed.member_age_at_subscription, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS member_age_at_subscription,
	MAX_BY(sed.member_gender, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS member_gender,
	MAX_BY(sed.member_occupation, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS member_occupation,
	MAX_BY(sed.member_height_cm, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS member_height_cm,
	MAX_BY(sed.member_weight_kg, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS member_weight_kg,
	MAX_BY(sed.member_is_represented_by_user_id, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS member_is_represented_by_user_id,
	MAX_BY(sed.relationship_beneficiary_with_owner, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS relationship_beneficiary_with_owner,
	MAX_BY(sed.owner_type, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS owner_type,
	MAX_BY(sed.voucher_item_items, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_items,
	MAX_BY(sed.voucher_item_total_items_quantity, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_total_items_quantity,
	MAX_BY(sed.voucher_item_total_discount_cents, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_total_discount_cents,
	MAX_BY(sed.voucher_item_total_unit_value_cents, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_total_unit_value_cents,
	MAX_BY(sed.voucher_item_main_item, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_main_item,
	MAX_BY(sed.voucher_item_list_unit_key, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_list_unit_key,
	MAX_BY(sed.voucher_item_parsed_product_service_key, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_parsed_product_service_key,
	MAX_BY(sed.voucher_item_created_ts, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_created_ts,
	MAX_BY(sed.voucher_item_is_cancellable, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_is_cancellable,
	MAX_BY(sed.voucher_item_list_cancellation_state, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_list_cancellation_state,
	MAX_BY(sed.voucher_item_list_cancellation_reason, COALESCE(sed.services_occurrence_ts, sed.services_created_ts)) AS voucher_item_list_cancellation_reason,

  -- From medical notes and related
  ARRAY_TO_STRING(ARRAY_AGG(DISTINCT consult_prescription_member_name IGNORE NULLS), ', ') AS consult_prescription_member_name,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT consult_prescription_doctor_name IGNORE NULLS), ', ') AS consult_prescription_doctor_name,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT consult_prescription_license_number IGNORE NULLS), ', ') AS consult_prescription_license_number,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT consult_prescription_license_institution IGNORE NULLS), ', ') AS consult_prescription_license_institution,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT consult_prescription_specialist_institution IGNORE NULLS), ', ') AS consult_prescription_specialist_institution,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.consult_prescription_diagnosis IGNORE NULLS), ', ') AS consult_prescription_diagnosis,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.evaluation_cie_keys IGNORE NULLS), ', ') AS evaluation_cie_keys,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.evaluation_diagnostics IGNORE NULLS), ', ') AS evaluation_diagnostics,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.evaluation_diagnostic_impression IGNORE NULLS), ', ') AS evaluation_diagnostic_impression,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.consult_prescription_specialization IGNORE NULLS), ', ') AS consult_prescription_specialization,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT CONCAT(COALESCE(emr.interrogation_system, emr.interrogation_system_name), ': ', emr.interrogation_notes) IGNORE NULLS), ', ') AS interrogation_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.exam_notes IGNORE NULLS), ', ') AS exam_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_type IGNORE NULLS), ', ') AS med_note_type,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_motive IGNORE NULLS), ', ') AS med_note_motive,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_state IGNORE NULLS), ', ') AS med_note_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_explo_segment_name IGNORE NULLS), ', ') AS med_explo_segment_name,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_explo_segment IGNORE NULLS), ', ') AS med_explo_segment,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.scheduledprocedure_procedure_name IGNORE NULLS), ', ') AS scheduledprocedure_procedure_name,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.medical_procedure_name IGNORE NULLS), ', ') AS medical_procedure_name,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.medical_procedure IGNORE NULLS), ', ') AS medical_procedure,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_pathologies_state IGNORE NULLS), ', ') AS med_history_pathologies_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_surgeries_state IGNORE NULLS), ', ') AS med_history_surgeries_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_vaccines_state IGNORE NULLS), ', ') AS med_history_vaccines_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_hospitalizations_state IGNORE NULLS), ', ') AS med_history_hospitalizations_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_allergies_state IGNORE NULLS), ', ') AS med_history_allergies_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_malformations_state IGNORE NULLS), ', ') AS med_history_malformations_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_family_pathologies_state IGNORE NULLS), ', ') AS med_history_family_pathologies_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_mental_health_psychology_state IGNORE NULLS), ', ') AS med_history_mental_health_psychology_state,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_mental_health_psychiatry_state IGNORE NULLS), ', ') AS med_history_mental_health_psychiatry_state,
	MAX( emr.consult_prescription_signed ) AS consult_prescription_signed,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_doctor_specializations IGNORE NULLS), ', ') AS med_note_doctor_specializations,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_doctor_specializations_description IGNORE NULLS), ', ') AS med_note_doctor_specializations_description,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_doctor_specializations_type IGNORE NULLS), ', ') AS med_note_doctor_specializations_type,
	MAX( emr.med_note_doctor_specializations_is_primary_care ) AS med_note_doctor_specializations_is_primary_care,
	MAX( emr.consult_prescription_has_antibiotics ) AS consult_prescription_has_antibiotics,
	MAX( emr.scheduledprocedure_is_urgent ) AS scheduledprocedure_is_urgent,
	MAX( emr.scheduledprocedure_in_hospital ) AS scheduledprocedure_in_hospital,
	MAX( emr.scheduledprocedure_has_extra_requirements ) AS scheduledprocedure_has_extra_requirements,
	MAX( emr.dischargeinfo_visits_amount ) AS dischargeinfo_visits_amount,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_health_summary IGNORE NULLS), ', ') AS med_history_health_summary,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.consult_prescription_recommendations IGNORE NULLS), ', ') AS consult_prescription_recommendations,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_note_suffering IGNORE NULLS), ', ') AS med_note_suffering,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_explo_notes IGNORE NULLS), ', ') AS med_explo_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.exam_physical_notes IGNORE NULLS), ', ') AS exam_physical_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.addendum_notes IGNORE NULLS), ', ') AS addendum_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_pathologies_notes IGNORE NULLS), ', ') AS med_history_pathologies_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_surgeries_notes IGNORE NULLS), ', ') AS med_history_surgeries_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_vaccines_notes IGNORE NULLS), ', ') AS med_history_vaccines_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_hospitalizations_notes IGNORE NULLS), ', ') AS med_history_hospitalizations_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_allergies_notes IGNORE NULLS), ', ') AS med_history_allergies_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_malformations_notes IGNORE NULLS), ', ') AS med_history_malformations_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_family_pathologies_notes IGNORE NULLS), ', ') AS med_history_family_pathologies_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_mental_health_psychology_notes IGNORE NULLS), ', ') AS med_history_mental_health_psychology_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_mental_health_psychiatry_notes IGNORE NULLS), ', ') AS med_history_mental_health_psychiatry_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.evaluation_notes IGNORE NULLS), ', ') AS evaluation_notes,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.scheduledprocedure_medical_reason IGNORE NULLS), ', ') AS scheduledprocedure_medical_reason,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.scheduledprocedure_extra_requirements IGNORE NULLS), ', ') AS scheduledprocedure_extra_requirements,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.dischargeinfo_stay_summary IGNORE NULLS), ', ') AS dischargeinfo_stay_summary,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.dischargeinfo_evolution IGNORE NULLS), ', ') AS dischargeinfo_evolution,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.dischargeinfo_discharge_reason IGNORE NULLS), ', ') AS dischargeinfo_discharge_reason,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.medical_procedure_description IGNORE NULLS), ', ') AS medical_procedure_description,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.procedurecategory_name IGNORE NULLS), ', ') AS procedurecategory_name,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.procedurecategory_description IGNORE NULLS), ', ') AS procedurecategory_description,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.procedurecategory_type IGNORE NULLS), ', ') AS procedurecategory_type,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.procedurecategory_cpt_key IGNORE NULLS), ', ') AS procedurecategory_cpt_key,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.med_history_last_huli_sync_snapshot IGNORE NULLS), ', ') AS med_history_last_huli_sync_snapshot,
	ARRAY_TO_STRING(ARRAY_AGG(DISTINCT emr.consult_prescription_items_json IGNORE NULLS), ', ') AS consult_prescription_items_json,
	MAX(  emr.medical_procedure_pathology_sending_required ) AS medical_procedure_pathology_sending_required,

FROM
	`sofia-data-305018.cadena_cuidado.services_events_diseases_socios` AS sed
LEFT JOIN 
	`sofia-data-305018.cadena_cuidado.emr_socios` AS emr
USING(member_id, service_id)
GROUP BY	
	sed.member_id,
	sed.service_id,
	sed.case_event_id,
	sed.disease_case_id,
	sed.services_related_service_id,
	sed.services_health_plan_id,
	sed.caseevent_invoice_id
